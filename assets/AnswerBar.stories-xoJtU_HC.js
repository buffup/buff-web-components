import{x as f}from"./lit-element-C3K0L47Q.js";import{d as t}from"./Person-CUtQ_Dqb.js";const u={title:"Components/Answer Bar",component:"buff-answer-bar",tags:["autodocs"]},a=r=>f`
    <div style="width: ${r.width}; height: ${r.height};">
        <buff-answer-bar
            .progress=${r.progress} .color=${r.color} .hoverColor=${r.hoverColor}
            .imageUrl=${r.imageUrl} .text=${r.text} .footer=${r.footer}
        ></buff-answer-bar>
    </div>
`,e=a.bind({});e.args={width:"200px",height:"50px",progress:0,color:"",hoverColor:"",imageUrl:t,text:"Example answer with long text that should wrap",footer:"100 pts"};const o=a.bind({});o.args={width:"200px",height:"50px",progress:.5,color:"",hoverColor:"",imageUrl:t,text:"Example answer with long text that should wrap",footer:"50%"};const s=a.bind({});s.args={width:"200px",height:"50px",progress:0,color:"green-600",hoverColor:"amber-400",imageUrl:t,text:"Example answer with long text that should wrap",footer:"✔️"};var g,l,i;e.parameters={...e.parameters,docs:{...(g=e.parameters)==null?void 0:g.docs,source:{originalSource:'args => html`\n    <div style="width: ${args.width}; height: ${args.height};">\n        <buff-answer-bar\n            .progress=${args.progress} .color=${args.color} .hoverColor=${args.hoverColor}\n            .imageUrl=${args.imageUrl} .text=${args.text} .footer=${args.footer}\n        ></buff-answer-bar>\n    </div>\n`',...(i=(l=e.parameters)==null?void 0:l.docs)==null?void 0:i.source}}};var h,n,p;o.parameters={...o.parameters,docs:{...(h=o.parameters)==null?void 0:h.docs,source:{originalSource:'args => html`\n    <div style="width: ${args.width}; height: ${args.height};">\n        <buff-answer-bar\n            .progress=${args.progress} .color=${args.color} .hoverColor=${args.hoverColor}\n            .imageUrl=${args.imageUrl} .text=${args.text} .footer=${args.footer}\n        ></buff-answer-bar>\n    </div>\n`',...(p=(n=o.parameters)==null?void 0:n.docs)==null?void 0:p.source}}};var m,d,c;s.parameters={...s.parameters,docs:{...(m=s.parameters)==null?void 0:m.docs,source:{originalSource:'args => html`\n    <div style="width: ${args.width}; height: ${args.height};">\n        <buff-answer-bar\n            .progress=${args.progress} .color=${args.color} .hoverColor=${args.hoverColor}\n            .imageUrl=${args.imageUrl} .text=${args.text} .footer=${args.footer}\n        ></buff-answer-bar>\n    </div>\n`',...(c=(d=s.parameters)==null?void 0:d.docs)==null?void 0:c.source}}};const x=["Default","ProgressBar","CustomColorsWithHover"];export{s as CustomColorsWithHover,e as Default,o as ProgressBar,x as __namedExportsOrder,u as default};
